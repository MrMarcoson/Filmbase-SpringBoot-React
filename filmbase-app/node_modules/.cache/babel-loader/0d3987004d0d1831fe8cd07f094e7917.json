{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projekty\\\\Filmbase-SpringBoot-React\\\\filmbase-app\\\\src\\\\Film.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { state, useParams, useEffect } from \"react\";\nimport { Row } from \"react-bootstrap\"; //todo fix this\n//singular film rendering\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Film = () => {\n  _s();\n\n  const [film, setFilm] = [];\n  const id = useParams();\n  useEffect(() => {\n    fetch(\"http://localhost:8080/api/film/\" + id).then(response => response.json()).then(data => setFilm(data));\n  });\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: state.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Film, \"aFo7laZ/9jIWurQFErjhEAaA8I4=\", false, function () {\n  return [useParams];\n});\n\n_c = Film;\nexport default Film;\n\nvar _c;\n\n$RefreshReg$(_c, \"Film\");","map":{"version":3,"sources":["D:/Projekty/Filmbase-SpringBoot-React/filmbase-app/src/Film.jsx"],"names":["React","state","useParams","useEffect","Row","Film","film","setFilm","id","fetch","then","response","json","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,KAAf,EAAsBC,SAAtB,EAAiCC,SAAjC,QAAiD,OAAjD;AACA,SAASC,GAAT,QAAoB,iBAApB,C,CAEA;AACA;;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB,EAAxB;AACA,QAAMC,EAAE,GAAGN,SAAS,EAApB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAAC,oCAAoCD,EAArC,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIN,OAAO,CAACM,IAAD,CAFrB;AAGH,GAJQ,CAAT;AAMA,sBACI,QAAC,GAAD;AAAA,cAAMZ,KAAK,CAACO;AAAZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAdD;;GAAMH,I;UAGSH,S;;;KAHTG,I;AAgBN,eAAeA,IAAf","sourcesContent":["import React, {state, useParams, useEffect} from \"react\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\n//todo fix this\r\n//singular film rendering\r\nconst Film = () => {\r\n    \r\n    const [film, setFilm] = [];\r\n    const id = useParams();\r\n    \r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8080/api/film/\" + id)\r\n        .then(response => response.json())\r\n        .then(data => setFilm(data))\r\n    });\r\n    \r\n    return (\r\n        <Row>{state.id}</Row>\r\n    )\r\n}\r\n\r\nexport default Film;\r\n"]},"metadata":{},"sourceType":"module"}