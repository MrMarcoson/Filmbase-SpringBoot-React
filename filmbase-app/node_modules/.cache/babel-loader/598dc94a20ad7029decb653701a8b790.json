{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projekty\\\\Filmbase-SpringBoot-React\\\\filmbase-app\\\\src\\\\Films.jsx\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport Film from './Film'; //multiple films rendering in a list\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilmsHeader = () => {\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      children: \"GRADE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: \"TITLE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: \"PREMIERE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: \"DESCRIPTION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FilmsHeader;\n\nfunction FilmDiv(props) {\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: `/film/${props.data.id}`,\n    render: props => /*#__PURE__*/_jsxDEV(Film, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 60\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: props.data.avgGrade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: props.data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: props.data.premiereDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: props.data.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n} //fetching info from api, and rendering divs\n\n\n_c2 = FilmDiv;\n\nclass FilmsContainer extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      list: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/api/film/ranking/0\").then(response => response.json()).then(data => {\n      this.setState({\n        list: data\n      });\n    }).catch(rejected => {\n      console.log(rejected);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dataDiv\",\n      children: [/*#__PURE__*/_jsxDEV(FilmsHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), this.state.list.map(film => /*#__PURE__*/_jsxDEV(FilmDiv, {\n        data: film\n      }, film.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 38\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction Films() {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Films\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilmsContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Films;\nexport default Films;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FilmsHeader\");\n$RefreshReg$(_c2, \"FilmDiv\");\n$RefreshReg$(_c3, \"Films\");","map":{"version":3,"sources":["D:/Projekty/Filmbase-SpringBoot-React/filmbase-app/src/Films.jsx"],"names":["React","Component","Container","Row","Col","BrowserRouter","Routes","Route","Link","Film","FilmsHeader","FilmDiv","props","data","id","avgGrade","title","premiereDate","description","FilmsContainer","state","list","componentDidMount","fetch","then","response","json","setState","catch","rejected","console","log","render","map","film","Films"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { BrowserRouter, Routes, Route, Link , } from \"react-router-dom\";\nimport Film from './Film';\n\n//multiple films rendering in a list\n\nconst FilmsHeader = () => {\n  return (\n    <Row>\n      <Col>GRADE</Col>\n      <Col>TITLE</Col>\n      <Col>PREMIERE</Col>\n      <Col>DESCRIPTION</Col>\n    </Row>\n  )\n}\n\nfunction FilmDiv(props) {\n  return (\n    <Link to={`/film/${props.data.id}`} render={(props) => <Film {...props}/>}>\n      <Row>\n          <Col>{props.data.avgGrade}</Col>\n          <Col>{props.data.title}</Col>\n          <Col>{props.data.premiereDate}</Col>\n          <Col>{props.data.description}</Col>\n      </Row>\n    </Link>\n  )\n}\n\n//fetching info from api, and rendering divs\nclass FilmsContainer extends Component{\n  state = {\n    list: []\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/api/film/ranking/0\")\n    .then(response => response.json())\n    .then(data => {\n      this.setState({list: data})\n    })\n    .catch(rejected => {\n      console.log(rejected);\n    });\n  }\n\n  render() {  \n    return (\n      <div className=\"dataDiv\">\n        <FilmsHeader />\n        {this.state.list.map(film => <FilmDiv key={film.id} data={film}/> )}    \n      </div>\n    )\n  }\n}\n\nfunction Films() {\n  return (\n    <Container fluid>\n      <h1>Films</h1>\n      <FilmsContainer/>\n    </Container>\n  )\n}\n\nexport default Films;\n"]},"metadata":{},"sourceType":"module"}