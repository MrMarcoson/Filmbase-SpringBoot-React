{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projekty\\\\Filmbase-SpringBoot-React\\\\filmbase-app\\\\src\\\\Film.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Row } from \"react-bootstrap\"; //todo fix this\n//singular film rendering\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FilmsContainer extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      film: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/api/film/\" + id).then(response => response.json()).then(data => {\n      this.setState({\n        film: data\n      });\n    }).catch(rejected => {\n      console.log(rejected);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dataDiv\",\n      children: [/*#__PURE__*/_jsxDEV(FilmsHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), this.state.list.map(film => /*#__PURE__*/_jsxDEV(FilmDiv, {\n        data: film\n      }, film.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 40\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst Film = () => {\n  _s();\n\n  const [film, setFilm] = [];\n  let {\n    id\n  } = useParams();\n  useEffect(async () => {\n    fetch(\"http://localhost:8080/api/film/\" + id).then(response => response.json()).then(data => setFilm(data));\n  });\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Film, \"XT1vicrm+NSYLQxrGm9hA77HN9Y=\", false, function () {\n  return [useParams];\n});\n\n_c = Film;\nexport default Film;\n\nvar _c;\n\n$RefreshReg$(_c, \"Film\");","map":{"version":3,"sources":["D:/Projekty/Filmbase-SpringBoot-React/filmbase-app/src/Film.jsx"],"names":["React","useEffect","useParams","Row","FilmsContainer","Component","state","film","componentDidMount","fetch","id","then","response","json","data","setState","catch","rejected","console","log","render","list","map","Film","setFilm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,GAAT,QAAoB,iBAApB,C,CAGA;AACA;;;;AACA,MAAMC,cAAN,SAA6BC,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACNC,MAAAA,IAAI,EAAE;AADA,KAD0B;AAAA;;AAKlCC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,oCAAoCC,EAArC,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AAAE,WAAKC,QAAL,CAAe;AAACR,QAAAA,IAAI,EAAEO;AAAP,OAAf;AAA+B,KAF/C,EAGCE,KAHD,CAGOC,QAAQ,IAAI;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAAwB,KAJxB;AAKH;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKd,KAAL,CAAWe,IAAX,CAAgBC,GAAhB,CAAoBf,IAAI,iBAAI,QAAC,OAAD;AAAuB,QAAA,IAAI,EAAEA;AAA7B,SAAcA,IAAI,CAACG,EAAnB;AAAA;AAAA;AAAA;AAAA,cAA5B,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AApBiC;;AAuBtC,MAAMa,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAM,CAAChB,IAAD,EAAOiB,OAAP,IAAkB,EAAxB;AACA,MAAI;AAAEd,IAAAA;AAAF,MAASR,SAAS,EAAtB;AAEAD,EAAAA,SAAS,CAAC,YAAW;AACjBQ,IAAAA,KAAK,CAAC,oCAAoCC,EAArC,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAIU,OAAO,CAACV,IAAD,CAFrB;AAGH,GAJQ,CAAT;AAMA,sBACI,QAAC,GAAD;AAAA,cAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAdD;;GAAMa,I;UAGWrB,S;;;KAHXqB,I;AAgBN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\n\r\n//todo fix this\r\n//singular film rendering\r\nclass FilmsContainer extends Component{\r\n    state = {\r\n      film: []\r\n    }\r\n  \r\n    componentDidMount() {\r\n        fetch(\"http://localhost:8080/api/film/\" + id)\r\n        .then(response => response.json())\r\n        .then(data => { this.setState( {film: data} ) })\r\n        .catch(rejected => {\r\n        console.log(rejected); });\r\n    }\r\n  \r\n    render() {  \r\n      return (\r\n        <div className=\"dataDiv\">\r\n          <FilmsHeader />\r\n          {this.state.list.map(film => <FilmDiv key={film.id} data={film}/> )}    \r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst Film = () => {\r\n    \r\n    const [film, setFilm] = [];\r\n    let { id } = useParams();\r\n    \r\n    useEffect(async() => {\r\n        fetch(\"http://localhost:8080/api/film/\" + id)\r\n        .then(response => response.json())\r\n        .then(data => setFilm(data))\r\n    });\r\n    \r\n    return (\r\n        <Row>{id}</Row>\r\n    )\r\n}\r\n\r\nexport default Film;\r\n"]},"metadata":{},"sourceType":"module"}