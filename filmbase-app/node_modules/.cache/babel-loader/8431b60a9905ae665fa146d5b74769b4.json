{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projekty\\\\Filmbase-SpringBoot-React\\\\filmbase-app\\\\src\\\\Search.jsx\",\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport FilmsContainer from \"./FilmsContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilmDiv = props => {\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: `/film/${props.data.id}`,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"filmDiv\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"filmInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cassete,\n          style: {\n            width: \"64px\",\n            height: \"128px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"filmInfo\",\n        children: props.data.avgGrade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"filmInfo\",\n        children: props.data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"filmInfo\",\n        children: props.data.premiereDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this);\n};\n\n_c = FilmDiv;\n\nconst Search = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [list, setList] = useState([]);\n  const [inf, setInf] = useState(-1);\n  const forceUpdate = useForceUpdate();\n\n  function add() {\n    setInf(0);\n  }\n\n  const fetch = url => {\n    _s();\n\n    useEffect(url => {\n      axios.get(\"http://localhost:8080/api/film/ranking/\" + url).then(res => {\n        console.log(res.data);\n        setList(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    }, [setList]);\n  };\n\n  _s(fetch, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        margin: \"2pc\"\n      },\n      children: \" Search films \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: add\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), console.log(inf), list.map(film => /*#__PURE__*/_jsxDEV(FilmDiv, {\n      data: film\n    }, film.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 28\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n};\n\n_s2(Search, \"kqivAHqsPu7aHrrZpljKCvdkCpM=\", true);\n\n_c2 = Search;\nexport default Search;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FilmDiv\");\n$RefreshReg$(_c2, \"Search\");","map":{"version":3,"sources":["D:/Projekty/Filmbase-SpringBoot-React/filmbase-app/src/Search.jsx"],"names":["useEffect","useState","Container","FilmsContainer","FilmDiv","props","data","id","cassete","width","height","avgGrade","title","premiereDate","Search","list","setList","inf","setInf","forceUpdate","useForceUpdate","add","fetch","url","axios","get","then","res","console","log","catch","err","textAlign","margin","map","film"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,sBACI,QAAC,IAAD;AAAM,IAAA,EAAE,EAAG,SAAQA,KAAK,CAACC,IAAN,CAAWC,EAAG,EAAjC;AAAA,2BACA,QAAC,GAAD;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BAA2B;AAAK,UAAA,GAAG,EAAEC,OAAV;AAAmB,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAE,MAAR;AAAgBC,YAAAA,MAAM,EAAE;AAAxB;AAA1B;AAAA;AAAA;AAAA;AAAA;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBAA2BL,KAAK,CAACC,IAAN,CAAWK;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBAA2BN,KAAK,CAACC,IAAN,CAAWM;AAAtC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBAA2BP,KAAK,CAACC,IAAN,CAAWO;AAAtC;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUC,CAXH;;KAAMT,O;;AAaN,MAAMU,MAAM,GAAG,MAAM;AAAA;;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACgB,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,CAAC,CAAC,CAAF,CAA9B;AACA,QAAMkB,WAAW,GAAGC,cAAc,EAAlC;;AAEA,WAASC,GAAT,GAAc;AACZH,IAAAA,MAAM,CAAC,CAAD,CAAN;AACD;;AAED,QAAMI,KAAK,GAAIC,GAAD,IAAS;AAAA;;AAACvB,IAAAA,SAAS,CAAEuB,GAAD,IAAS;AACzCC,MAAAA,KAAK,CAACC,GAAN,CAAU,4CAA4CF,GAAtD,EACCG,IADD,CACMC,GAAG,IAAI;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACrB,IAAhB;AACAU,QAAAA,OAAO,CAACW,GAAG,CAACrB,IAAL,CAAP;AACC,OAJL,EAKCwB,KALD,CAKOC,GAAG,IAAI;AACVH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,OAPD;AAQH,KATkC,EAShC,CAACf,OAAD,CATgC,CAAT;AASX,GATb;;AATmB,KASbM,KATa;;AAqBnB,sBACI,QAAC,SAAD;AAAA,4BACE;AAAI,MAAA,KAAK,EAAE;AAACU,QAAAA,SAAS,EAAE,QAAZ;AAAsBC,QAAAA,MAAM,EAAE;AAA9B,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEZ;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGO,OAAO,CAACC,GAAR,CAAYZ,GAAZ,CAHH,EAIGF,IAAI,CAACmB,GAAL,CAASC,IAAI,iBAAK,QAAC,OAAD;AAAuB,MAAA,IAAI,EAAEA;AAA7B,OAAcA,IAAI,CAAC5B,EAAnB;AAAA;AAAA;AAAA;AAAA,YAAlB,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQD,CA7BD;;IAAMO,M;;MAAAA,M;AA+BN,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\"\r\nimport FilmsContainer from \"./FilmsContainer\"\r\n\r\nconst FilmDiv = (props) => {\r\n  return (\r\n      <Link to={`/film/${props.data.id}`}>\r\n      <Row className = \"filmDiv\">\r\n          <Col className=\"filmInfo\" ><img src={cassete} style={{width: \"64px\", height: \"128px\"}}/></Col>\r\n          <Col className=\"filmInfo\">{props.data.avgGrade}</Col>\r\n          <Col className=\"filmInfo\">{props.data.title}</Col>\r\n          <Col className=\"filmInfo\">{props.data.premiereDate}</Col>\r\n      </Row>\r\n      </Link>\r\n      )\r\n  }\r\n\r\nconst Search = () => {\r\n  const [list, setList] = useState([]);\r\n  const [inf, setInf] = useState(-1);\r\n  const forceUpdate = useForceUpdate();\r\n\r\n  function add(){\r\n    setInf(0);\r\n  }\r\n\r\n  const fetch = (url) => {useEffect((url) => {\r\n    axios.get(\"http://localhost:8080/api/film/ranking/\" + url)\r\n    .then(res => {\r\n        console.log(res.data)\r\n        setList(res.data)\r\n        })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n}, [setList]);}\r\n\r\n\r\n  return (\r\n      <Container>\r\n        <h1 style={{textAlign: \"center\", margin: \"2pc\"}}> Search films </h1>\r\n        <button onClick={add}/>\r\n        {console.log(inf)}\r\n        {list.map(film => (<FilmDiv key={film.id} data={film} />))}\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}