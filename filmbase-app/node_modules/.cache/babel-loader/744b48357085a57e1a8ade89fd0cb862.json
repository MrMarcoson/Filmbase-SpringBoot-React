{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projekty\\\\Filmbase-SpringBoot-React\\\\filmbase-app\\\\src\\\\FilmsContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { BrowserRouter, Routes, Route, Link, useParams } from \"react-router-dom\";\nimport Film from './Film';\nimport axios from \"axios\";\nimport cassete from './casette.png';\nimport { height } from 'dom-helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilmsHeader = () => {\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      children: \"IMG\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: \"GRADE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: \"TITLE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: \"PREMIERE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = FilmsHeader;\n\nconst FilmDiv = props => {\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: `/film/${props.data.id}`,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"filmDiv\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"filmInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cassete,\n          style: {\n            width: \"64px\",\n            height: \"128px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"filmInfo\",\n        children: props.data.avgGrade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"filmInfo\",\n        children: props.data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"filmInfo\",\n        children: props.data.premiereDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = FilmDiv;\n\nconst FilmsContainer = () => {\n  _s();\n\n  const url = useParams();\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/film/ranking/0\").then(res => {\n      console.log(res.data);\n      setList(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [setList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filmsContainer\",\n    children: list.map(film => /*#__PURE__*/_jsxDEV(FilmDiv, {\n      data: film\n    }, film.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 28\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FilmsContainer, \"s+P/WZgMMfe2WMq+IrYopLDrbys=\", false, function () {\n  return [useParams];\n});\n\n_c3 = FilmsContainer;\nexport default FilmsContainer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FilmsHeader\");\n$RefreshReg$(_c2, \"FilmDiv\");\n$RefreshReg$(_c3, \"FilmsContainer\");","map":{"version":3,"sources":["D:/Projekty/Filmbase-SpringBoot-React/filmbase-app/src/FilmsContainer.jsx"],"names":["React","Component","useState","useEffect","Container","Row","Col","BrowserRouter","Routes","Route","Link","useParams","Film","axios","cassete","height","FilmsHeader","FilmDiv","props","data","id","width","avgGrade","title","premiereDate","FilmsContainer","url","list","setList","get","then","res","console","log","catch","err","map","film"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { BrowserRouter, Routes, Route, Link , useParams } from \"react-router-dom\";\r\nimport Film from './Film';\r\nimport axios from \"axios\";\r\nimport cassete from './casette.png';\r\nimport { height } from 'dom-helpers';\r\n\r\nconst FilmsHeader = () => {\r\nreturn (\r\n    <Row>\r\n        <Col>IMG</Col>\r\n        <Col>GRADE</Col>\r\n        <Col>TITLE</Col>\r\n        <Col>PREMIERE</Col>\r\n    </Row>\r\n    )\r\n}\r\n\r\nconst FilmDiv = (props) => {\r\nreturn (\r\n    <Link to={`/film/${props.data.id}`}>\r\n    <Row className = \"filmDiv\">\r\n        <Col className=\"filmInfo\" ><img src={cassete} style={{width: \"64px\", height: \"128px\"}}/></Col>\r\n        <Col className=\"filmInfo\">{props.data.avgGrade}</Col>\r\n        <Col className=\"filmInfo\">{props.data.title}</Col>\r\n        <Col className=\"filmInfo\">{props.data.premiereDate}</Col>\r\n    </Row>\r\n    </Link>\r\n    )\r\n}\r\n\r\nconst FilmsContainer = () => {\r\n\r\nconst url = useParams();\r\nconst [list, setList] = useState([]);\r\n\r\nuseEffect(() => {\r\n    axios.get(\"http://localhost:8080/api/film/ranking/0\")\r\n    .then(res => {\r\n        console.log(res.data)\r\n        setList(res.data)\r\n        })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n}, [setList]);\r\n\r\nreturn (\r\n    <div className=\"filmsContainer\">\r\n        {list.map(film => (<FilmDiv key={film.id} data={film} />))}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default FilmsContainer;"]},"metadata":{},"sourceType":"module"}